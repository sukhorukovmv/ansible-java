---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install test dependencies
        run: pip3 install yamllint ansible-lint==6.10.2

      - name: Yamllint
        run: |
          yamllint .

      - name: Ansible-lint
        run: |
          ansible-lint .

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - centos7
          - ubuntu2004
          - ubuntu1804

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies.
        run: pip3 install -r ./molecule/requirements.txt

      - name: Run Molecule tests (install openjdk)
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule tests (install oraclejdk)
        run: molecule test -s install-oraclejdk -- --extra-vars "java_googledrive_apikey=${{ secrets.JAVA_GOOGLEDRIVE_APIKEY }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  up_release:
    name: Up release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event_name != 'pull_request'
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        # Only a single commit is fetched by default, for the ref/SHA that triggered the workflow.
        # Set fetch-depth: 0 to fetch all history for all branches and tags.
        with:
          fetch-depth: 0
      - name: Get latest tag
        run: |
          LATEST_TAG=$(/usr/bin/git describe --tags --abbrev=0)
          echo "latest-tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
        id: latest-tag
      - name: View latest tag
        run: |
          echo ${{ steps.latest-tag.outputs.latest-tag }}



  generate_release_from_branch:
    name: Generate release from branch
    if: contains(github.event.pull_request.head.ref, 'release/v') && github.event.pull_request.merged == true && github.event_name == 'pull_request' && github.event.action == 'closed'
    # if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch version
        run: |
          VERSION=$(echo "${GITHUB_HEAD_REF}" | sed "s/release\\/v//")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        id: fetch-version

      - name: Generate release notes
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          tag_name: ${{ steps.fetch-version.outputs.version }}
          generate_release_notes: true
